version: "3.7"

services:
  backend:
    image: docker.pkg.github.com/corridors-of-time-transcription/puzzlepieces/puzzlepieces:${IMAGE_TAG}
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DEBUG=${IS_DEBUG}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${URL}
      - SQL_ENGINE=django.db.backends.mysql
      - SQL_DATABASE=puzzlepieces
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - SQL_HOST=db
      - SQL_PORT=${SQL_PORT}
      - DATABASE=mysql
    networks:
      - backend
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${URL}`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.puzzlepieces-backend.loadbalancer.server.port=8000"
    deploy:
      rollback_config:
        failure_action: rollback
        monitor: 60s
        delay: 10s
        order: start-first
      placement:
        constraints:
          - node.role == worker

  db:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=${SQL_PASSWORD_ROOT}
      - MYSQL_DATABASE=puzzlepieces
      - MYSQL_USER=${SQL_USER}
      - MYSQL_PASSWORD=${SQL_PASSWORD}
    networks:
      - backend
    volumes:
      - db_mysql:/var/lib/mysql
    labels:
      - "traefik.enable=false"
    deploy:
      #restart_policy:
      #  condition: on-failure
      endpoint_mode: dnsrr
      rollback_config:
        failure_action: rollback
        monitor: 60s
        delay: 10s
        order: stop-first
      placement:
        constraints:
          - node.role == manager

networks:
  backend:
    external: false
  proxy:
    external: true

volumes:
  db_mysql:
    external: true
